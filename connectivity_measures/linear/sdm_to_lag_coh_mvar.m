function [lag_coh, lag_lin_dep] = sdm_to_lag_coh_mvar(s_xx,s_yy,s_xy)

%FUNCTION: Computes multivariate lagged coherence between vector-valued
%series using spectral matrices generated by spectrum_to_sdm. The
%multivariate measure operates on the entire matrix at once, returning a
%scalar measure of total coherence between vector-valued times series
%factoring out the internal coherence structure among individual channels
%in each.
%
%INPUT:
%
%       s is a spectral density matrix returned by
%       spectrum_to_sdm, channels by channels by frequencies
%
%
%OUTPUT:
%
%       lag_coh: multivariate lagged coherence
%
%       lag_lin_dep: log scaled lagged linear dependence
%
%REF: https://arxiv.org/ftp/arxiv/papers/0711/0711.1455.pdf

n_freqs = size(s_xx,3);
%Get block matrices and real parts
[blk_auto_spectra] = get_block_matrix(s_xx,s_yy);
blk_auto_real  = real(blk_auto_spectra);
cross_spectra_real = real(s_xy);

%get vectors of determinants
det_cross_real  = arrayfun(@(k) det(cross_spectra_real(:,:,k)), 1:n_freqs);
det_auto_real   = arrayfun(@(k) det(blk_auto_real(:,:,k)), 1:n_freqs);
det_cross       = arrayfun(@(k) det(s_xy(:,:,k)), 1:n_freqs);
det_auto        = arrayfun(@(k) det(blk_auto_spectra(:,:,k)), 1:n_freqs);

%get lagged connectivity measures
lag_lin_dep_ratio = (det_cross_real./det_auto_real)./(det_cross./det_auto);
%the ratio has trivial imaginary parts due to precision,
%matrices are Hermitian so true eigenvalues are all real
lag_lin_dep = real(log(lag_lin_dep_ratio));%linear dependence
lag_coh     = 1-exp(-lag_lin_dep); %lagged coherence

